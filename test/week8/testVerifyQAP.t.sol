// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";

import {VerifyQAP} from "../../src/week8/verifyQAP.sol";


contract VerifyQAPTest is Test {
    VerifyQAP public verifyQAP;

    function setUp() public {
        verifyQAP = new VerifyQAP();
    }

    function test_correctSolution() public view {
        // A = (4203354248098965814520394130914331327426391109752300847939220103868812578464, 6677526900376181439608830102520787294582151277094026624823720861014896742005)
        // B = ((17827118267071601996247906788160269423473708588548429437179657633324157863925, 12495924353406571754458427587011886217921821426958791346943315873927189347133), (8836619016301597629341663385744946523518247723959439892712767828040547176146, 8274538108740771922250508749673290700419436723354879596241391303663396457605))
        // C = (4919466747792686656295650805866965411142330926654559552638330133776467015800, 8630513727152069241014343455371068481304012035017794543246623328807895524685)
        bool result = verifyQAP.verifyQAP(
            VerifyQAP.G1Point({x: 4203354248098965814520394130914331327426391109752300847939220103868812578464, y: 6677526900376181439608830102520787294582151277094026624823720861014896742005}),
            VerifyQAP.G2Point({ x: [17827118267071601996247906788160269423473708588548429437179657633324157863925, 12495924353406571754458427587011886217921821426958791346943315873927189347133], y: [8836619016301597629341663385744946523518247723959439892712767828040547176146, 8274538108740771922250508749673290700419436723354879596241391303663396457605]}),
            VerifyQAP.G1Point({x: 4919466747792686656295650805866965411142330926654559552638330133776467015800, y: 8630513727152069241014343455371068481304012035017794543246623328807895524685})
        );

        assertEq(result, true);
    }

        function test_incorrectSolution() public view {
        // A = (4203354248098965814520394130914331327426391109752300847939220103868812578464, 6677526900376181439608830102520787294582151277094026624823720861014896742005)
        // B = ((17827118267071601996247906788160269423473708588548429437179657633324157863925, 12495924353406571754458427587011886217921821426958791346943315873927189347133), (8836619016301597629341663385744946523518247723959439892712767828040547176146, 8274538108740771922250508749673290700419436723354879596241391303663396457605))
        // C = (4919466747792686656295650805866965411142330926654559552638330133776467015800, 8630513727152069241014343455371068481304012035017794543246623328807895524685)
        bool result = verifyQAP.verifyQAP(
            VerifyQAP.G1Point({x: 1, y: 2}),
            VerifyQAP.G2Point({ x: [17827118267071601996247906788160269423473708588548429437179657633324157863925, 12495924353406571754458427587011886217921821426958791346943315873927189347133], y: [8836619016301597629341663385744946523518247723959439892712767828040547176146, 8274538108740771922250508749673290700419436723354879596241391303663396457605]}),
            VerifyQAP.G1Point({x: 4919466747792686656295650805866965411142330926654559552638330133776467015800, y: 8630513727152069241014343455371068481304012035017794543246623328807895524685})
        );

        assertEq(result, false);
    }
}